# This is a Klipper configuration for Tron XY-2 Pro, with
# CXY-V6 motherboard. no-Titan, no-BMG.


#            === FLASHING WITH STOCK BOOTLOADER ===
# You should make firmware for STM32F103 with bootloader offset
# at 0x8008800 (Chitu v6 Bootloader). Uncheck USB, and leave default
# serial settings.
#
# Use "./scripts/update_chitu.py ./out/klipper.bin ./out/update.cbd" after make to generate update.cbd.
# Put `update.cbd` onto SD card, and reboot the printer.
# It will be automatically installed, and you will be able to update it this way.

[include fluidd.cfg]

# uncomment if using mainsail
# [include mainsail.cfg] 

#[virtual_sdcard]
# path: /home/tucker/printer_data/gcodes
# on_error_gcode: CANCEL_PRINT

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 150
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[stepper_x]
step_pin: PE5
dir_pin: PE6
enable_pin: !PC13
microsteps: 32
rotation_distance: 40
endstop_pin: !PG10
position_endstop: -1
position_min: -1
position_max: 255
homing_speed: 50
homing_retract_dist: 10
second_homing_speed: 10.0

[stepper_y]
step_pin: PE2
dir_pin: PE3
enable_pin: !PE4
microsteps: 32
rotation_distance: 40
endstop_pin: !PA12
position_endstop: 0
position_max: 255
homing_retract_dist: 10
homing_speed: 50.0
second_homing_speed: 10.0

[stepper_z]
step_pin: PB9
dir_pin: !PE0
enable_pin: !PE1
microsteps: 32
rotation_distance: 8
endstop_pin: probe:z_virtual_endstop
position_max: 260
position_min: -2

[extruder]
step_pin: PB4
dir_pin: PB5
enable_pin: !PB8
microsteps: 32
rotation_distance: 33.805
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 300.0
#   Maximum length (in mm of raw filament) that a retraction or
#   extrude-only move may have. If a retraction or extrude-only move
#   requests a distance greater than this value it will cause an error
#   to be returned. The default is 50mm.
#max_extrude_only_velocity:
#max_extrude_only_accel:
#   Maximum velocity (in mm/s) and acceleration (in mm/s^2) of the
#   extruder motor for retractions and extrude-only moves. These
#   settings do not have any impact on normal printing moves. If not
#   specified then they are calculated to match the limit an XY
#   printing move with a cross section of 4.0*nozzle_diameter^2 would
#   have.
heater_pin: PG12
sensor_type: ATC Semitec 104GT-2
sensor_pin: PA1
#smooth_time: 1.0
#   A time value (in seconds) over which temperature measurements will
#   be smoothed to reduce the impact of measurement noise. The default
#   is 1 seconds.
control = pid
pid_kp = 18.226
pid_ki = 0.741
pid_kd = 112.092
#   The proportional (pid_Kp), integral (pid_Ki), and derivative
#   (pid_Kd) settings for the PID feedback control system. Klipper
#   evaluates the PID settings with the following general formula:
#     heater_pwm = (Kp*error + Ki*integral(error) - Kd*derivative(error)) / 255
#   Where "error" is "requested_temperature - measured_temperature"
#   and "heater_pwm" is the requested heating rate with 0.0 being full
#   off and 1.0 being full on. Consider using the PID_CALIBRATE
#   command to obtain these parameters. The pid_Kp, pid_Ki, and pid_Kd
#   parameters must be provided for PID heaters.
min_temp: 0
max_temp: 260
#   The maximum range of valid temperatures (in Celsius) that the
#   heater must remain within. This controls a safety feature
#   implemented in the micro-controller code - should the measured
#   temperature ever fall outside this range then the micro-controller
#   will go into a shutdown state. This check can help detect some
#   heater and sensor hardware failures. Set this range just wide
#   enough so that reasonable temperatures do not result in an error.
#   These parameters must be provided.
## max_extrude_only_distance: 300

[heater_bed]
heater_pin: PG11
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
min_temp: 0
max_temp: 130
pid_Kp: 73.932
pid_Ki: 1.521
pid_Kd: 898.279

[heater_fan hotend_fan]
pin: PG14
fan_speed: 1

[fan]
pin: PG13
max_power: 1

[controller_fan drivers_fan]
pin: PD6

[filament_switch_sensor sentinel]
pause_on_runout: True
runout_gcode:
  M25
switch_pin: PA15

[output_pin beeper]
pin: PB0

[safe_z_home]
home_xy_position: 127,127
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 120
probe_count: 4,4
horizontal_move_z: 5
algorithm: lagrange
mesh_min : 50,50
mesh_max : 205,205
mesh_pps: 0

# ALWAYS SUBSTRACT  0.075 FROM PROBE CALIBRATION!
[probe]
x_offset: -50
y_offset: -10
pin: !PG9
speed: 30
z_offset: 1.725

[gcode_macro START_PRINT]
gcode:
  # Start bed preheat
  {% set BED_TEMP = params.BED_TEMP|default(55)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  M140 S{BED_TEMP}
  # Use absolute coordinates
  G90
  # Reset the G-Code Z offset (adjust Z offset if needed)
  SET_GCODE_OFFSET Z=0
  # Home all axis
  G28
  # Raise nozzle and move X Y home before heating
  G1 Z5.0
  G1 X0 Y0
  # Start nozzle preheat
  M104 S170
  # Set bed temp and wait
  M190 S{BED_TEMP}
  # Set and wait for nozzle to reach temperature
  M109 S{EXTRUDER_TEMP}

[gcode_macro END_PRINT]
gcode:
  # Set extruder to Relative
  #M83
  # Set all axis to Relative
  G91
  # Retract 5mm of filament at 50mm/s
  G1 E-5 F3000 
  # Move up 10mm
  G1 Z10 
  # Set all axis to Absolute 
  G90 
  # Park print head
  G1 X0 Y255 
  # Set fan speed to 0
  M106 S0 
  # Set bed temp to 0
  M104 S0 
  # Set Nozzle temp to 0
  M140 S0 
  # Disable all stepper motors
  M84 
  # Clear bed mesh
  #BED_MESH_CLEAR
  # Turn off gcode offset
  #SET_GCODE_OFFSET Z=0